- type: entity
  save: false
  name: Marine(Base)
  id: BaseMarine
  noSpawn: false
  components:
  - type: FriendlyFire
  - type: FriendlyFireToggleable
    fireRateModifier: 0.6
  - type: StatusIcon
  - type: SleepEmitSound
  - type: Marine
  - type: GhostTakeoverAvailable
  - type: LagCompensation
  - type: RangedDamageSound
    soundGroups:
      Brute:
        collection:
          MeatBulletImpact
    soundTypes:
      Heat:
        collection:
          MeatLaserImpact
  - type: Tag
    tags:
    - CanPilot
    - FootstepSound
    - DoorBumpOpener
    - Marine
  - type: Reactive
    groups:
      Flammable: [ Touch ]
      Extinguish: [ Touch ]
      Acidic: [Touch, Ingestion]
    reactions:
    - reagents: [Water, SpaceCleaner]
      methods: [Touch]
      effects:
      - !type:WashCreamPieReaction
  - type: Flashable
  - type: Polymorphable
  - type: Identity
  - type: Hands
  - type: MovementSpeedModifier
  - type: MovedByPressure
  - type: Barotrauma
    damage:
      types:
        Blunt: 0.35 #per second, scales with pressure and other constants.
  - type: DamageOnHighSpeedImpact
    damage:
      types:
        Blunt: 5
    soundHit:
      path: /Audio/Effects/hit_kick.ogg
  # Organs
  - type: InjectableSolution
    solution: chemicals
  - type: IdExaminable
  - type: HealthExaminable
    examinableTypes:
      - Blunt
      - Slash
      - Piercing
      - Heat
      - Shock
  - type: Bloodstream
    bloodReagent: Blood
    bloodlossDamage:
      types:
        Bloodloss: 0.5
    bloodlossHealDamage:
      types:
        Bloodloss: -1
    damageBleedModifiers: CMBloodlossHuman
  - type: Stamina
  - type: StatusEffects
    allowed:
      - Stun
      - KnockedDown
      - SlowedDown
      - Stutter
      - SeeingRainbows
      - Electrocution
      - Drunk
      - SlurredSpeech
      - PressureImmunity
      - Muted
      - ForcedSleep
      - TemporaryBlindness
      - Pacified
  - type: Blindable
  # Other
  - type: Inventory
  - type: InventorySlots
  - type: Clickable
  - type: InteractionOutline
  - type: Icon
    sprite: Mobs/Species/Human/parts.rsi
    state: full
  - type: Sprite
    noRot: true
    drawdepth: Mobs
    layers:
      - map: [ "enum.HumanoidVisualLayers.Chest" ]
      - map: [ "enum.HumanoidVisualLayers.Head" ]
      - map: [ "enum.HumanoidVisualLayers.Snout" ]
      - map: [ "enum.HumanoidVisualLayers.Eyes" ]
      - map: [ "enum.HumanoidVisualLayers.RArm" ]
      - map: [ "enum.HumanoidVisualLayers.LArm" ]
      - map: [ "enum.HumanoidVisualLayers.RLeg" ]
      - map: [ "enum.HumanoidVisualLayers.LLeg" ]
      - shader: StencilClear
        sprite: Mobs/Species/Human/parts.rsi #PJB on stencil clear being on the left leg: "...this is 'fine'" -https://github.com/space-wizards/space-station-14/pull/12217#issuecomment-1291677115
        # its fine, but its still very stupid that it has to be done like this instead of allowing sprites to just directly insert a stencil clear.
        # sprite refactor when
        state: l_leg
      - shader: StencilMask
        map: ["enum.HumanoidVisualLayers.StencilMask"]
        sprite: Mobs/Customization/masking_helpers.rsi
        state: unisex_full
        visible: false
      - map: ["jumpsuit"]
      - map: ["enum.HumanoidVisualLayers.LFoot"]
      - map: ["enum.HumanoidVisualLayers.RFoot"]
      - map: ["enum.HumanoidVisualLayers.LHand"]
      - map: ["enum.HumanoidVisualLayers.RHand"]
      - map: [ "id" ]
      - map: [ "gloves" ]
      - map: [ "shoes" ]
      - map: [ "ears" ]
      - map: [ "outerClothing" ]
      - map: [ "eyes" ]
      - map: [ "belt" ]
      - map: [ "neck" ]
      - map: [ "back" ]
      - map: [ "enum.HumanoidVisualLayers.FacialHair" ]
      - map: [ "enum.HumanoidVisualLayers.Hair" ]
      - map: [ "enum.HumanoidVisualLayers.HeadSide" ]
      - map: [ "enum.HumanoidVisualLayers.HeadTop" ]
      - map: [ "enum.HumanoidVisualLayers.Tail" ]
      - map: [ "mask" ]
      - map: [ "head" ]
      - map: [ "pocket1" ]
      - map: [ "pocket2" ]
      - map: ["enum.HumanoidVisualLayers.Handcuffs"]
        color: "#ffffff"
        sprite: Objects/Misc/handcuffs.rsi
        state: body-overlay-2
        visible: false
      - map: [ "clownedon" ] # Dynamically generated
        sprite: "Effects/creampie.rsi"
        state: "creampie_human"
        visible: false
  - type: Physics
    bodyType: KinematicController
  - type: Fixtures
    fixtures:
      fix1:
        shape:
          !type:PhysShapeCircle
          radius: 0.35
        density: 185
        restitution: 0.0
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: AtmosExposed
  - type: Flammable
    fireSpread: false
    canResistFire: true
    damage:
      types:
        Heat: 3
  - type: Temperature
    heatDamageThreshold: 360
    coldDamageThreshold: 260
    currentTemperature: 310.15
    specificHeat: 42
    coldDamage:
      types:
        Cold: 0.1
    heatDamage:
      types:
        Heat: 0.1
  - type: HumanoidAppearance
    species: Marine
  - type: Body
    prototype: Human
    requiredLegs: 2
  - type: Damageable
    damageContainer: Biological
  - type: RadiationReceiver
  - type: ThermalRegulator
    metabolismHeat: 800
    radiatedHeat: 100
    implicitHeatRegulation: 500
    sweatHeatRegulation: 2000
    shiveringHeatRegulation: 2000
    normalBodyTemperature: 310.15
    thermalRegulationTemperatureThreshold: 25
  - type: Internals
  - type: MobState
  - type: MobThresholds
    thresholds:
      0: Alive
      100: Critical
      200: Dead
  - type: MobStateActions
    actions:
      Critical:
      - ActionCritSuccumb
      - ActionCritFakeDeath
      - ActionCritLastWords
  - type: Deathgasp
  - type: Destructible
    thresholds:
      - trigger:
          !type:DamageTypeTrigger
          damageType: Blunt
          damage: 400
        behaviors:
          - !type:GibBehavior { }
  - type: SlowOnDamage
    speedModifierThresholds:
      60: 0.7
      80: 0.5
  - type: DamageVisuals
    thresholds: [ 10, 20, 30, 50, 70, 100 ]
    targetLayers:
      - "enum.HumanoidVisualLayers.Chest"
      - "enum.HumanoidVisualLayers.Head"
      - "enum.HumanoidVisualLayers.LArm"
      - "enum.HumanoidVisualLayers.LLeg"
      - "enum.HumanoidVisualLayers.RArm"
      - "enum.HumanoidVisualLayers.RLeg"
    damageOverlayGroups:
      Brute:
        sprite: Mobs/Effects/brute_damage.rsi
        color: "#FF0000"
      Burn:
        sprite: Mobs/Effects/burn_damage.rsi
  - type: Appearance
  - type: GenericVisualizer
    visuals:
      enum.CreamPiedVisuals.Creamed:
        clownedon: # Not 'creampied' bc I can already see Skyrat complaining about conflicts.
          True: {visible: true}
          False: {visible: false}
  - type: RotationVisuals
  - type: FloatingVisuals
  - type: FireVisuals
    sprite: Mobs/Effects/onfire.rsi
    normalState: Generic_mob_burning
    alternateState: Standing
    fireStackAlternateState: 3
  - type: CombatMode
    canDisarm: true
  - type: Climbing
  - type: Cuffable
  - type: Ensnareable
    sprite: Objects/Misc/ensnare.rsi
    state: icon
  - type: AnimationPlayer
  - type: Buckle
  - type: MeleeWeapon
    hidden: true
    soundHit:
      collection: Punch
    angle: 30
    animation: WeaponArcFist
    attackRate: 1
    damage:
      types:
        Blunt: 5
  - type: Pullable
  - type: DoAfter
  - type: CreamPied
  - type: Stripping
  - type: Strippable
  - type: Puller
  - type: Butcherable
    butcheringType: Spike
    spawned:
      - id: FoodMeat
        amount: 5
  - type: Speech
    speechSounds: Alto
  - type: Vocal
    sounds:
      Male: MaleHuman
      Female: FemaleHuman
      Unsexed: MaleHuman
  - type: Emoting
  - type: BodyEmotes
    soundsId: GeneralBodyEmotes
  - type: Grammar
    attributes:
      proper: true
  - type: StandingState
  - type: Fingerprint
  - type: MobPrice
    price: 1500
    deathPenalty: 0.01
  - type: Hunger
  - type: Thirst
  - type: Perishable
  - type: InteractionPopup
    successChance: 1
    interactSuccessString: hugging-success-generic
    interactSuccessSound: /Audio/Effects/thudswoosh.ogg
    messagePerceivedByOthers: hugging-success-generic-others
  - type: MindContainer
    showExamineInfo: true
  - type: Input
    context: "human"
  - type: MobMover
  - type: InputMover
  - type: Respirator
    damage:
      types:
        Asphyxiation: 1.0
    damageRecovery:
      types:
        Asphyxiation: -1.0
  - type: Alerts
  - type: Actions
  - type: Eye
  - type: CameraRecoil
  - type: Examiner
  - type: CanHostGuardian
  - type: NpcFactionMember
    factions:
    - NanoTrasen
  - type: WirelessNetworkConnection
    range: 2000
  - type: DeviceNetwork
    deviceNetId: Wireless
    receiveFrequencyId: SurveillanceCameraEntertainment
    transmitFrequencyId: SurveillanceCamera
  - type: SurveillanceCamera
    setupAvailableNetworks:
      - SurveillanceCameraEntertainment
  - type: TagInteraction
    blacklistTag: InteractionCAS
  - type: CMSurgeryTarget
  - type: UserInterface
    interfaces:
      enum.VoiceMaskUIKey.Key:
        type: VoiceMaskBoundUserInterface
      enum.HumanoidMarkingModifierKey.Key:
        type: HumanoidMarkingModifierBoundUserInterface
      enum.StrippingUiKey.Key:
        type: StrippableBoundUserInterface
      enum.CMSurgeryUIKey.Key:
        type: CMSurgeryBui
  - type: ShowJobIcons
  - type: Huggable
  - type: Tackleable
  - type: Tackle
    stun: 10
  - type: XenoNestable
  - type: Devourable
  - type: ImmuneToClothingRequiredStepTrigger

- type: species
  id: Marine
  name: species-name-human
  roundStart: true
  prototype: BaseMarine
  sprites: MobHumanSprites
  markingLimits: MarineMarkingLimits
  dollPrototype: MobHumanDummy
  skinColoration: HumanToned

- type: markingPoints
  id: MarineMarkingLimits
  points:
    Hair:
      points: 1
      required: false
    FacialHair:
      points: 1
      required: false
    Tail: # the cat tail joke
      points: 1 # Corvax-Sponsors
      required: false
    HeadTop: # the cat ear joke
      points: 1 # Corvax-Sponsors
      required: false
    Chest:
      points: 1
      required: false
    Legs:
      points: 2
      required: false
    Arms:
      points: 2
      required: false
